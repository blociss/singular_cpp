;
LIB "feynman.lib";
ring R=0,(x,y,z),(lp(2),dp(1));
def S= removeVariable(R,2);
S;
  graph G = makeGraph(list(1,2,3,4),list(list(1,3),list(1,2),list(2,4),list(3,4),list(1),list(2),list(3),list(4)));
  labeledgraph lG = labelGraph(G,0);
  eliminateVariables(lG);
  graph G = makeGraph(list(1,2,3,4),list(list(1,3),list(1,2),list(2,4),list(3,4),list(1),list(2),list(3),list(4)));
  labeledgraph lG = labelGraph(G,0);
  def R= lG.over;
  setring R;
  ideal I = balancingIdeal(lG);
I;
 graph G = makeGraph(list(1,2,3,4,5,6),list(list(6,1),list(4,6),list(1,2),list(3,5),list(4,3),list(2,5),list(5,6),list(1),list(2),list(3),list(4)));
    labeledgraph G1=computeBaikovMatrix(G);
    module ML=computeM1(G1);

 ring RB=G1.baikovover;
    RB;
    module ML=computeM1(G1);
    ML;

$
